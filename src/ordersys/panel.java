/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ordersys;

import java.awt.Desktop;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.event.WindowEvent;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowListener;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.io.File;  // Import the File class
import java.io.FileWriter;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.io.IOException; 
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
/**
 *
 * @author wisnshaftler
 */
public class panel extends javax.swing.JFrame {
    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    File selectedFile;
    /**
     * Creates new form panel
     */
    public panel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTabPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        lblImg = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnCart = new javax.swing.JButton();
        btnClearCart = new javax.swing.JButton();
        btnClearSelected = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        btnBilling = new javax.swing.JButton();
        lbl = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        finalTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFullPayment = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAdvance = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        lblFinalTotal = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtNewItemName = new javax.swing.JTextField();
        txtNewItemPrice = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnImageChoose = new javax.swing.JButton();
        lblNewItemImg = new javax.swing.JLabel();
        btnNewItemAdd = new javax.swing.JButton();
        btnNewItemClear = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtItemUpdatePrice = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtItemIDPrice = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtItemDescID = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtUpdateDesc = new javax.swing.JTextField();
        btnPriceUpdate = new javax.swing.JButton();
        btnUpdateDesc = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtItemIdAvailable = new javax.swing.JTextField();
        cmbAvailability = new javax.swing.JComboBox<>();
        btnUpdateAvailability = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtUpdateImageID = new javax.swing.JTextField();
        lblImageName = new javax.swing.JLabel();
        btnUpdateImageSubmit = new javax.swing.JButton();
        btnUpdateImage = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblViewOrderByOID = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        lblCustomerName = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        lblCustomerPhone = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        lblCustomerAddress = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        lblOrderAdvance = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        lblOrderAmount = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        lblOrderDate = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();
        btnGetOrderByID = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        lblCustomerID = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        lblBalance = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtCustomerPhone = new javax.swing.JTextField();
        btnSearchByCPH = new javax.swing.JButton();
        btnGetOrderByIDclear = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblShowOrdersByPH = new javax.swing.JTable();
        btnSearchByCPHclear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("orderSys - Ordering System");

        mainTabPane.setToolTipText("");

        jPanel1.setToolTipText("View All Items");
        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Description", "Price", "Image Name", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(itemTable);
        DefaultTableModel model = (DefaultTableModel)itemTable.getModel();
        getItems items = new getItems();
        ArrayList<String> _items = items.returnData();
        int len = _items.size()/5;
        int counter = 0;

        for (int i =0; i<len; i++){
            Object[] obj = {_items.get(counter++),_items.get(counter++),
                _items.get(counter++),_items.get(counter++),_items.get(counter++)};
            model.addRow(obj);
        }

        lblImg.setBackground(new java.awt.Color(0, 0, 0));
        lblImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 51)));

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        jLabel1.setText("Item Image");

        btnCart.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCart.setText("Add to cart");
        btnCart.setBorder(null);
        btnCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCartActionPerformed(evt);
            }
        });

        btnClearCart.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnClearCart.setText("Clear Cart");
        btnClearCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCartActionPerformed(evt);
            }
        });

        btnClearSelected.setBackground(new java.awt.Color(153, 153, 153));
        btnClearSelected.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnClearSelected.setText("Remove selected");
        btnClearSelected.setBorder(null);
        btnClearSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSelectedActionPerformed(evt);
            }
        });

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Description", "QTY", "unit Price", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(cartTable);

        btnBilling.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBilling.setText("Create Bill");
        btnBilling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBillingActionPerformed(evt);
            }
        });

        lbl.setFont(new java.awt.Font("Cambria", 0, 24)); // NOI18N
        lbl.setText("Total Amount");

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTotal.setText("0");
        lblTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 255, 102), null));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnUpdate.setText("Refresh");
        btnUpdate.setToolTipText("Refresh Main Item table");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbl)
                                .addGap(72, 72, 72)
                                .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCart, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnClearSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnClearCart, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnBilling, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblImg, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCart, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClearCart, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClearSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBilling, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(34, 34, 34)))
                .addContainerGap())
        );

        mainTabPane.addTab("All Items", null, jPanel1, "All items prices and details");

        jPanel2.setToolTipText("Make a income");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Contact Number");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Address");

        finalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Description", "Unit Price", "QTY", "Total"
            }
        ));
        jScrollPane3.setViewportView(finalTable);

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel5.setText("Bought Items");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Full Payment");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Advance Payment");

        jButton1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton1.setText("Submit");
        jButton1.setToolTipText("Proceed the payment");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel8.setText("Total");

        lblFinalTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 102, 0), null));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4))
                                        .addGap(72, 72, 72)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtName)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(40, 40, 40))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(lblFinalTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFullPayment, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                                    .addComponent(txtAdvance)))
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(157, 157, 157)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtFullPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtAdvance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFinalTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainTabPane.addTab("Billing", null, jPanel2, "Make sales");

        jPanel3.setToolTipText("Edit Update items from system");

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel9.setText("Add Items");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Item Description");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Item Price");

        btnImageChoose.setText("Choose Image");
        btnImageChoose.setToolTipText("Choose image for the item");
        btnImageChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImageChooseActionPerformed(evt);
            }
        });

        lblNewItemImg.setBackground(new java.awt.Color(0, 0, 0));
        lblNewItemImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 51)));

        btnNewItemAdd.setText("Submit");
        btnNewItemAdd.setToolTipText("Add item to system");
        btnNewItemAdd.setActionCommand("");
        btnNewItemAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewItemAddActionPerformed(evt);
            }
        });

        btnNewItemClear.setText("Clear");
        btnNewItemClear.setToolTipText("Clear All add new items fileds");
        btnNewItemClear.setActionCommand("");
        btnNewItemClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewItemClearActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel12.setText("Update Image");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Item ID");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("New Price");

        jLabel16.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel16.setText("Update Description");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Item ID");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("New Desc.");

        btnPriceUpdate.setText("Update");
        btnPriceUpdate.setToolTipText("");
        btnPriceUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPriceUpdateActionPerformed(evt);
            }
        });

        btnUpdateDesc.setText("Update");
        btnUpdateDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDescActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel19.setText("Update Price");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setText("Item ID");

        cmbAvailability.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "yes", "no" }));

        btnUpdateAvailability.setText("Update");
        btnUpdateAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAvailabilityActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel21.setText("Update Availability");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel22.setText("Item ID");

        lblImageName.setToolTipText("Image Name appear here");
        lblImageName.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));

        btnUpdateImageSubmit.setText("Update");
        btnUpdateImageSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateImageSubmitActionPerformed(evt);
            }
        });

        btnUpdateImage.setText("Choose Image");
        btnUpdateImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(txtItemIDPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtItemUpdatePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPriceUpdate))
                    .addComponent(jLabel9)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel13))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNewItemName, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                    .addComponent(txtNewItemPrice)))
                            .addComponent(btnNewItemAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnImageChoose, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(btnNewItemClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel19)
                    .addComponent(jLabel21)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(txtItemIdAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmbAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdateAvailability)))
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtItemDescID, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtUpdateDesc)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateDesc))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(18, 18, 18)
                                .addComponent(txtUpdateImageID, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblImageName, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdateImage)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdateImageSubmit))
                            .addComponent(lblNewItemImg, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel12))
                        .addGap(0, 127, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(txtNewItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(txtNewItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(btnImageChoose)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNewItemAdd)
                            .addComponent(btnNewItemClear))
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(lblNewItemImg, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(8, 8, 8)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(txtItemUpdatePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)
                        .addComponent(txtItemIDPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnPriceUpdate))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(txtUpdateDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18)
                        .addComponent(txtItemDescID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUpdateDesc)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel12))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(txtItemIdAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUpdateAvailability))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel22)
                                    .addComponent(txtUpdateImageID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lblImageName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnUpdateImage)
                                .addComponent(btnUpdateImageSubmit))
                            .addGap(1, 1, 1))))
                .addContainerGap(215, Short.MAX_VALUE))
        );

        mainTabPane.addTab("Manage Items", jPanel3);

        jPanel4.setToolTipText("View previouse orders");

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel10.setText("By Order Number");

        tblViewOrderByOID.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Description", "Price", "QTY", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblViewOrderByOID);

        jLabel23.setText("Customer Name");

        lblCustomerName.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));

        jLabel25.setText("Customer Phone");

        lblCustomerPhone.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));

        jLabel27.setText("Customer Address");

        lblCustomerAddress.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));

        jLabel29.setText("Order Date");

        lblOrderAdvance.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));

        jLabel31.setText("Order Advance");

        lblOrderAmount.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));

        jLabel33.setText("Order Amount");

        lblOrderDate.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));

        txtOrderId.setToolTipText("Enter Order ID");

        btnGetOrderByID.setText("Search");
        btnGetOrderByID.setToolTipText("Click here order ID and click on the Search");
        btnGetOrderByID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetOrderByIDActionPerformed(evt);
            }
        });

        jLabel34.setText("Customer ID");

        lblCustomerID.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));

        jLabel32.setText("Order Balance");

        lblBalance.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));

        jLabel24.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel24.setText("By Customer Phone Number");

        txtCustomerPhone.setToolTipText("Enter Order ID");
        txtCustomerPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerPhoneActionPerformed(evt);
            }
        });

        btnSearchByCPH.setText("Search");
        btnSearchByCPH.setToolTipText("Click here order ID and click on the Search");
        btnSearchByCPH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByCPHActionPerformed(evt);
            }
        });

        btnGetOrderByIDclear.setText("Clear");
        btnGetOrderByIDclear.setToolTipText("Clear");
        btnGetOrderByIDclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetOrderByIDclearActionPerformed(evt);
            }
        });

        tblShowOrdersByPH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OrderID", "Name", "Total Amount", "Advance Amount", "Balance Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblShowOrdersByPH);

        btnSearchByCPHclear.setText("Clear");
        btnSearchByCPHclear.setToolTipText("Clear");
        btnSearchByCPHclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByCPHclearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel29)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addGap(19, 19, 19)
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel33)
                                                .addComponent(jLabel34))
                                            .addGap(41, 41, 41)
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblOrderAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addGap(11, 11, 11)
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel23)
                                                .addComponent(jLabel25))
                                            .addGap(38, 38, 38)
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(lblCustomerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addGap(42, 42, 42)
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.TRAILING)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel27)
                                            .addGap(2, 2, 2)))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(txtOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnGetOrderByID, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblOrderAdvance, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCustomerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblOrderDate, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(btnGetOrderByIDclear, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(1, 1, 1)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel24)
                        .addGap(6, 6, 6)
                        .addComponent(txtCustomerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearchByCPH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearchByCPHclear))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGetOrderByID)
                    .addComponent(jLabel24)
                    .addComponent(txtCustomerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchByCPH)
                    .addComponent(btnGetOrderByIDclear)
                    .addComponent(btnSearchByCPHclear))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCustomerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel27)
                                    .addComponent(lblCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(5, 5, 5))
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblOrderDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(lblCustomerPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblOrderAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblOrderAdvance, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(lblCustomerID, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(lblBalance, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5)))
                .addContainerGap())
        );

        mainTabPane.addTab("view orders", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabPane)
        );

        mainTabPane.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemTableMouseClicked
        // TODO add your handling code here:
        //get selected item row id
        int id = itemTable.getSelectedRow();
        //get image name
        String imageName = itemTable.getValueAt(id, 3).toString();

        //create image variable
        ImageIcon img = new ImageIcon(getClass().getResource("/img/"+imageName));
        //create image 
        Image _img = img.getImage();
        //create resized
        Image resizedImg = _img.getScaledInstance(lblImg.getWidth(), lblImg.getHeight(), java.awt.Image.SCALE_SMOOTH);
        img = new ImageIcon(resizedImg);
        lblImg.setIcon(img);
    }//GEN-LAST:event_itemTableMouseClicked

    private void btnCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCartActionPerformed
        // TODO add your handling code here:
        try{
            int id = itemTable.getSelectedRow();
            String itemID = itemTable.getValueAt(id, 0).toString();
            String itemName = itemTable.getValueAt(id, 1).toString();
            float itemPrice = Float.parseFloat(itemTable.getValueAt(id, 2).toString());
            float totalPrice = 0;
            int qty;
            
            String _qty = (JOptionPane.showInputDialog("How much quantity that you need? Item name: "+itemName));
            //check the input it int othervise repeat it
            while (true){
                try{
                   qty = Integer.parseInt(_qty);
                   if(qty <= 0){
                       return;
                   }
                   break;
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Invalid input please try again. To cancel this item enter 0 value for QTY");
                    _qty = (JOptionPane.showInputDialog("How much quantity that you need? Item name: "+itemName));
                }
            }
            //create model for the crtTable
            DefaultTableModel crtTable = (DefaultTableModel)cartTable.getModel();
            //crate object to add data to the cart
            Object[] obj = {itemID, itemName, itemPrice, qty, itemPrice*qty};
            //add items to the cart table
            crtTable.addRow(obj);
            
            float currentValue = Float.parseFloat(lblTotal.getText())+(itemPrice*qty);
            lblTotal.setText(String.valueOf(currentValue));
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "No item selected in item table");
        }
    }//GEN-LAST:event_btnCartActionPerformed

    private void btnClearSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSelectedActionPerformed
        // TODO add your handling code here:
        try{
         int id = cartTable.getSelectedRow();
         DefaultTableModel crtTable = (DefaultTableModel)cartTable.getModel();
         float itemPrice = Float.parseFloat(cartTable.getValueAt(id, 4).toString());
         float totalPrice = Float.parseFloat(lblTotal.getText());
         lblTotal.setText(String.valueOf(totalPrice-itemPrice));
         
         crtTable.removeRow(id);
         
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "No item selected in cart");
        }
    }//GEN-LAST:event_btnClearSelectedActionPerformed

    private void btnClearCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCartActionPerformed
        // TODO add your handling code here:
        try{
            DefaultTableModel crtTable = (DefaultTableModel)cartTable.getModel();
            //get how many rows
            int rowCount = crtTable.getRowCount();
            for(int i = rowCount-1; i >=0; i--){
                crtTable.removeRow(i);
            }
            lblTotal.setText("0");
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "There are no rows in cart table");
        }
    }//GEN-LAST:event_btnClearCartActionPerformed

    private void btnBillingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBillingActionPerformed
        // TODO add your handling code here:
        try{
            DefaultTableModel crtTable = (DefaultTableModel)cartTable.getModel();
            DefaultTableModel fnlTable = (DefaultTableModel)finalTable.getModel();
            //clear final table rows
            int rowCount = fnlTable.getRowCount();
            for(int i = rowCount-1; i >=0; i--){
                fnlTable.removeRow(i);
            }
            rowCount = crtTable.getRowCount();
            if(rowCount ==0){
                JOptionPane.showMessageDialog(null, "No item selected. Please add some items");
                return;
            }
            for (int i = 0; rowCount>i; i++){
                Object[] obj = {crtTable.getValueAt(i, 0).toString(), crtTable.getValueAt(i, 1).toString(), 
                crtTable.getValueAt(i, 2).toString(), crtTable.getValueAt(i, 3).toString(), crtTable.getValueAt(i, 4).toString(),};
                fnlTable.addRow(obj);
            }
            lblFinalTotal.setText(lblTotal.getText());
            mainTabPane.setSelectedIndex(1);
        }catch (HeadlessException e){
            JOptionPane.showMessageDialog(null, "Error!! please close this program and try again" +e);
        }
    }//GEN-LAST:event_btnBillingActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        String address = txtAddress.getText();
        String contact = txtContact.getText();
        
        if ("".equals(txtFullPayment.getText().trim())){
            txtFullPayment.setText("0");
        }
        if ("".equals(txtAdvance.getText().trim())){
            txtAdvance.setText("0");
        }
        float fullPayment = Float.parseFloat(txtFullPayment.getText());
        float advancePayment = Float.parseFloat(txtAdvance.getText());
        float total = Float.parseFloat(lblFinalTotal.getText());
        int customerID = 0;
        int orderID = 0;
        float balance = 0;
        
        //check total is greater than full payment
        if(total > fullPayment && advancePayment ==0 ){
            JOptionPane.showMessageDialog(null, "The total paying amount is less than total amount. Please check");
            return;
        }
        //check the advance is not 0 and full payemnt is not 0
        if(fullPayment !=0 && advancePayment !=0){
            JOptionPane.showMessageDialog(null, "Trying to make advance payment please check");
            return;            
        }
        
        conn =  connector.connectDB();
        String sql = "insert into customer (name, address, phone) values (?, ?, ?)";
        try{
            //get user id
            pst = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
            pst.setString(1, name);
            pst.setString(2, address);
            pst.setString(3, contact);
            pst.executeUpdate();
            rs = pst.getGeneratedKeys();
            
            if(rs.next()){
                // add user id to customer id variable
                customerID = rs.getInt(1);
            }
            sql = "insert into orders (customerID, totalAmount, advanceAmount, balanceAmount)"
                    + "values(?,?,?,?)";
            if(advancePayment> 0 ){
                balance = total - advancePayment;
            }
            pst = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
            pst.setString(1, String.valueOf(customerID));
            pst.setString(2, String.valueOf(total));
            pst.setString(3, String.valueOf(advancePayment));
            pst.setString(4, String.valueOf(balance));
            pst.executeUpdate();
            rs = pst.getGeneratedKeys();
            
            if(rs.next()){
                // add to order and get order ID
                orderID = rs.getInt(1);
            }
            
            DefaultTableModel fnlTable = (DefaultTableModel)finalTable.getModel();
            //clear final table rows
            int rowCount = fnlTable.getRowCount();
            
            sql = "insert into order_items (orderID, itemID, qty) values(?,?,?)"; 
            for(int i = 0; rowCount>i; i++){
                pst = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
                pst.setString(1, String.valueOf(orderID));
                pst.setString(2, fnlTable.getValueAt(i, 0).toString());
                pst.setString(3, fnlTable.getValueAt(i, 3).toString());
                pst.executeUpdate();
            }
            
            if(fullPayment > total){
                balance = fullPayment-total;
                //create file
                File objFile;
                objFile = new File(System.getProperty("user.dir")+"/src/invoices/"+String.valueOf(customerID)+"_"+String.valueOf(orderID)+".txt");
                objFile.createNewFile();
                FileWriter invoiceFile = new FileWriter(System.getProperty("user.dir")+"/src/invoices/"+String.valueOf(customerID)+"_"+String.valueOf(orderID)+".txt");
                invoiceFile.write("\t \t \t INVOICE \n");
                invoiceFile.write("--------------------------------------------------------------------------- \n");
                invoiceFile.write("itemCode \t Desc. \t \t UnitPrice \t \t QTY \t Total \n");
                for(int i = 0; rowCount>i; i++){
                    invoiceFile.write(fnlTable.getValueAt(i, 0).toString()+"\t"+fnlTable.getValueAt(i, 1).toString()+"\t"+
                    fnlTable.getValueAt(i, 2).toString()+"\t \t \t  "+fnlTable.getValueAt(i, 3).toString()+" \t" +
                            fnlTable.getValueAt(i, 4).toString()+"\n");
                }
                invoiceFile.write("--------------------------------------------------------------------------- \n");
                invoiceFile.write("Total \t \t \t "+ String.valueOf(total)+"\n");
                invoiceFile.write("--------------------------------------------------------------------------- \n");
                invoiceFile.write("---------------------------Created by orderSys----------------------------- \n");
                invoiceFile.close();
                //show success message
                JOptionPane.showMessageDialog(null, "Success. Balance is Rs."+ String.valueOf(balance));
                //open from default app
                Desktop desktop = Desktop.getDesktop();
                desktop.open(objFile);
            }else{
                File objFile;
                objFile = new File(System.getProperty("user.dir")+"/src/invoices/"+String.valueOf(customerID)+"_"+String.valueOf(orderID)+".txt");
                objFile.createNewFile();
                FileWriter invoiceFile = new FileWriter(System.getProperty("user.dir")+"/src/invoices/"+String.valueOf(customerID)+"_"+String.valueOf(orderID)+".txt");
                invoiceFile.write("\t \t \t INVOICE \n");
                invoiceFile.write("--------------------------------------------------------------------------- \n");
                invoiceFile.write("itemCode \t Desc. \t \t UnitPrice \t \t QTY \t Total \n");
                for(int i = 0; rowCount>i; i++){
                    invoiceFile.write(fnlTable.getValueAt(i, 0).toString()+"\t"+fnlTable.getValueAt(i, 1).toString()+"\t"+
                    fnlTable.getValueAt(i, 2).toString()+"\t \t \t  "+fnlTable.getValueAt(i, 3).toString()+" \t" +
                            fnlTable.getValueAt(i, 4).toString()+"\n");
                }
                invoiceFile.write("--------------------------------------------------------------------------- \n");
                invoiceFile.write("Total \t \t \t "+ String.valueOf(total)+"\n");
                invoiceFile.write("Payed \t \t \t "+ String.valueOf(fullPayment)+"\n");
                invoiceFile.write("balance \t \t \t "+ String.valueOf(balance)+"\n");
                invoiceFile.write("--------------------------------------------------------------------------- \n");
                invoiceFile.write("---------------------------Created by orderSys----------------------------- \n");
                invoiceFile.close();
                //show success message
                JOptionPane.showMessageDialog(null, "Success");
                //open from default app
                Desktop desktop = Desktop.getDesktop();
                desktop.open(objFile);
            }
            //clear the billing section
            rowCount = fnlTable.getRowCount();
            for(int i = rowCount-1; i >=0; i--){
                fnlTable.removeRow(i);
            }
            DefaultTableModel crtTable = (DefaultTableModel)cartTable.getModel();
            rowCount = crtTable.getRowCount();
            for(int i =rowCount-1; i >=0; i--){
                crtTable.removeRow(i);
            }
            txtName.setText("");
            txtAddress.setText("");
            txtContact.setText("");
            txtFullPayment.setText("");
            txtAdvance.setText("");
            lblFinalTotal.setText("");
            mainTabPane.setSelectedIndex(0);
        }catch (SQLException ex){
            JOptionPane.showMessageDialog(null, "Error please close and reopen");
        } catch (IOException ex) {
            Logger.getLogger(panel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnImageChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImageChooseActionPerformed
        // TODO add your handling code here:
        //create a chooser
        JFileChooser newItemImage = new JFileChooser();
        newItemImage.setCurrentDirectory(new File(System.getProperty("user.home")));
        //showing the chooser
        int result = newItemImage.showOpenDialog(jPanel1);
        //check result status
        if(result == JFileChooser.APPROVE_OPTION){
            selectedFile = newItemImage.getSelectedFile();
            String[] filePath = (selectedFile.getAbsolutePath()).split("\\.");
            String ext = filePath[filePath.length-1];
            
            if (!ext.contains("png") && !ext.contains("jpg") && !ext.contains("jpeg") && !ext.contains("gif") ) {
                JOptionPane.showMessageDialog(null, "File type is incorrect please select JPG, JPEG, PNG or GIF");
                return;
            }
            
            ImageIcon img = new ImageIcon(selectedFile.getAbsolutePath());
            Image _img = img.getImage();
            //create resized
            Image resizedImg = _img.getScaledInstance(lblNewItemImg.getWidth(), lblNewItemImg.getHeight(), java.awt.Image.SCALE_SMOOTH);
            img = new ImageIcon(resizedImg);
            lblNewItemImg.setIcon(img);
            
        }
    }//GEN-LAST:event_btnImageChooseActionPerformed

    private void btnNewItemAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewItemAddActionPerformed
        // TODO add your handling code here:
        String itemName = txtNewItemName.getText();
        String itemPrice = txtNewItemPrice.getText();
        
        if(itemName.trim() == ""){
            JOptionPane.showMessageDialog(null, "Item name is not valid please check");
            return;
        }
        
        while (true){
            try{
                Float.parseFloat(itemPrice);
                break;
            }catch (Exception e){
                JOptionPane.showMessageDialog(null, "Item Price is not valid. Please check");
                return;
            }
        }
        
        Path src = Paths.get(selectedFile.getAbsolutePath());
        Random rand = new Random();
        int randInt = rand.nextInt(999999);
        
        Path dest = Paths.get(System.getProperty("user.dir")+"/src/img/"+String.valueOf(randInt)+selectedFile.getName());
        try {
            Files.copy(src, dest);
        } catch (IOException ex) {
            Logger.getLogger(panel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Image file name is already in database. Please rename image name");
        }
        
        try{
            String sql = "insert into items (description, price, imagename) values(?,?,?)";
            conn = conn =  connector.connectDB();
            pst = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
            pst.setString(1, itemName);
            pst.setString(2, itemPrice);
            pst.setString(3, String.valueOf(randInt)+selectedFile.getName());
            pst.executeUpdate();
            txtNewItemName.setText("");
            txtNewItemPrice.setText("");
            lblNewItemImg.setIcon(null);
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnNewItemAddActionPerformed

    private void btnNewItemClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewItemClearActionPerformed
        // TODO add your handling code here:
        txtNewItemName.setText("");
        txtNewItemPrice.setText("");
        lblNewItemImg.setIcon(null);
        
    }//GEN-LAST:event_btnNewItemClearActionPerformed

    private void btnPriceUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPriceUpdateActionPerformed
        // TODO add your handling code here:
        String id = txtItemIDPrice.getText();
        float price = 0 ;
        if (id.trim() == ""){
            JOptionPane.showMessageDialog(null, "Item ID cant be empty please check");
            return;
        }
        try{
            price = Float.parseFloat(txtItemUpdatePrice.getText());
            if(price <=0 ){
                JOptionPane.showMessageDialog(null, "The price value is invalid");
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Invalid Price Please check");
            return;
        }
        
        String sql = "update items set price = ? where id = ?";
        conn = conn =  connector.connectDB();
        try{
            pst = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
            pst.setString(1, String.valueOf(price));
            pst.setString(2, id);
            pst.executeUpdate();
            rs = pst.getGeneratedKeys();
            JOptionPane.showMessageDialog(null, "Done updating");
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, "Update is not perfomed. Please Check Item ID");
        }
    }//GEN-LAST:event_btnPriceUpdateActionPerformed

    private void btnUpdateDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDescActionPerformed
        // TODO add your handling code here:
        String id = txtItemDescID.getText();
        String desc = txtUpdateDesc.getText();
        if (id.trim() == ""){
            JOptionPane.showMessageDialog(null, "Item ID cant be empty please check");
            return;
        }
        if(desc.trim() == ""){
            JOptionPane.showMessageDialog(null, "Item Desc. cant be empty please check");
            return;
        }
        
        String sql = "update items set description = ? where id = ?";
        conn = conn =  connector.connectDB();
        try{
            pst = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
            pst.setString(1, String.valueOf(desc));
            pst.setString(2, id);
            pst.executeUpdate();
            rs = pst.getGeneratedKeys();
            JOptionPane.showMessageDialog(null, "Done updating");
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, "Update is not perfomed. Please Check Item ID");
        }
    }//GEN-LAST:event_btnUpdateDescActionPerformed

    private void btnUpdateAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAvailabilityActionPerformed
        // TODO add your handling code here:
        String id = txtItemIdAvailable.getText();
        if (id.trim() == ""){
            JOptionPane.showMessageDialog(null, "Item ID cant be empty please check");
            return;
        }
        
        String sql = "update items set available = ? where id = ?";
        conn = conn =  connector.connectDB();
        try{
            pst = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
            pst.setString(1, cmbAvailability.getSelectedItem().toString());
            pst.setString(2, id);
            pst.executeUpdate();
            rs = pst.getGeneratedKeys();
            JOptionPane.showMessageDialog(null, "Done updating");
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, "Update is not perfomed. Please Check Item ID");
        }
    }//GEN-LAST:event_btnUpdateAvailabilityActionPerformed

    private void btnUpdateImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateImageActionPerformed
        // TODO add your handling code here:
        JFileChooser newItemImage = new JFileChooser();
        newItemImage.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = newItemImage.showOpenDialog(jPanel1);
        if(result == JFileChooser.APPROVE_OPTION){
            selectedFile = newItemImage.getSelectedFile();
            String[] filePath = (selectedFile.getAbsolutePath()).split("\\.");
            String ext = filePath[filePath.length-1];
            
            if (!ext.contains("png") && !ext.contains("jpg") && !ext.contains("jpeg") && !ext.contains("gif") ) {
                JOptionPane.showMessageDialog(null, "File type is incorrect please select JPG, JPEG, PNG or GIF");
                return;
            }
            lblImageName.setText(selectedFile.getName());
            
        }
    }//GEN-LAST:event_btnUpdateImageActionPerformed

    private void btnUpdateImageSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateImageSubmitActionPerformed
        // TODO add your handling code here:
        String id = txtUpdateImageID.getText();
        if (id.trim()==""){
            JOptionPane.showMessageDialog(null, "Item ID cant be empty please check");
        }
        Path src = Paths.get(selectedFile.getAbsolutePath());
        Random rand = new Random();
        int randInt = rand.nextInt(999999);
        
        Path dest = Paths.get(System.getProperty("user.dir")+"/src/img/"+String.valueOf(randInt)+selectedFile.getName());
        try {
            Files.copy(src, dest);
        } catch (IOException ex) {
            Logger.getLogger(panel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Image file name is already in database. Please rename image name");
        }
        String sql = "update items set imagename = ? where id = ?";
        conn = conn =  connector.connectDB();
        try{
            pst = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
            pst.setString(1, String.valueOf(randInt)+selectedFile.getName());
            pst.setString(2, id);
            pst.executeUpdate();
            rs = pst.getGeneratedKeys();
            JOptionPane.showMessageDialog(null, "Done updating");
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, "Update is not perfomed. Please Check Item ID");
        }
    }//GEN-LAST:event_btnUpdateImageSubmitActionPerformed

    private void btnGetOrderByIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetOrderByIDActionPerformed
        // TODO add your handling code here:
        //clear txt
        String orderID = txtOrderId.getText();
        if(orderID.trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Order ID is empty");
            return;
        }
        
        try{
            getOrderItems getOrderById = new getOrderItems();
            String counter = getOrderById.LoadItems(orderID);
            if ("0".equals(counter)){
                JOptionPane.showMessageDialog(null, "No record found. Please check the order ID");
                return;
            }
            List<String> orderItems = getOrderById.returnData();
            DefaultTableModel model = (DefaultTableModel)tblViewOrderByOID.getModel();
            int len = orderItems.size()/5;
            int tableRow = model.getRowCount();
            //remove data from table
            for(int i = tableRow-1; i >=0; i--){
                model.removeRow(i);
            }
            //remove lable data
            lblCustomerName.setText("");
            lblCustomerPhone.setText("");
            lblOrderAmount.setText("");
            lblCustomerID.setText("");
            lblCustomerAddress.setText("");
            lblOrderDate.setText("");
            lblOrderAdvance.setText("");
            lblBalance.setText("");
            
            tableRow =0;
            for (int i =0; i<len; i++){
                Object[] obj = {orderItems.get(tableRow++),orderItems.get(tableRow++),
                            orderItems.get(tableRow++),orderItems.get(tableRow++),orderItems.get(tableRow++)};
                model.addRow(obj);
            }
            
            String customerLenth = getOrderById.returnCustomer(orderID);
            if (!"1".equals(customerLenth)){
                JOptionPane.showMessageDialog(null, "Customer data cant get please contact IT");
                return;
            }
            List<String> orderCustomer = getOrderById.returnData();
            lblCustomerName.setText(orderCustomer.get(1));
            lblCustomerPhone.setText(orderCustomer.get(3));
            lblOrderAmount.setText(orderCustomer.get(4));
            lblCustomerID.setText(orderCustomer.get(0));
            lblCustomerAddress.setText(orderCustomer.get(2));
            lblOrderDate.setText(orderCustomer.get(7));
            lblOrderAdvance.setText(orderCustomer.get(5));
            lblBalance.setText(orderCustomer.get(6));
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "There was an error. Please close and open the software");
        }
    }//GEN-LAST:event_btnGetOrderByIDActionPerformed

    private void btnSearchByCPHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByCPHActionPerformed
        // TODO add your handling code here:
        String phone = txtCustomerPhone.getText();
        getOrderItems getOrderByPhone= new getOrderItems();
        String counter = getOrderByPhone.getOrdersByPhone(phone);
        
        if("0".equals(counter)){
            JOptionPane.showMessageDialog(null, "No data fount please check"+counter);
            return;
        }
        //create order users 
        List<String> orderUsers = getOrderByPhone.returnData();
        DefaultTableModel model = (DefaultTableModel)tblShowOrdersByPH.getModel();
        int tableRow = model.getRowCount();
        //remove data from table
        for(int i = tableRow-1; i >=0; i--){
            model.removeRow(i);
        }
        //get returened list lenth
        int _looper = orderUsers.size()/6;
        //add data to 
        tableRow = 0;
        for(int i =0; i <_looper; i++){
            Object[] obj = {orderUsers.get(tableRow++),orderUsers.get(tableRow++),
                            orderUsers.get(tableRow++),orderUsers.get(tableRow++),
                            orderUsers.get(tableRow++),orderUsers.get(tableRow++)};
            model.addRow(obj);
        }
        
    }//GEN-LAST:event_btnSearchByCPHActionPerformed

    private void btnGetOrderByIDclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetOrderByIDclearActionPerformed
        // TODO add your handling code here:
        txtOrderId.setText("");
        lblCustomerName.setText("");
        lblCustomerPhone.setText("");
        lblOrderAmount.setText("");
        lblCustomerID.setText("");
        lblCustomerAddress.setText("");
        lblOrderDate.setText("");
        lblOrderAdvance.setText("");
        lblBalance.setText("");
        
        DefaultTableModel model = (DefaultTableModel)tblViewOrderByOID.getModel();
        int tableRow = model.getRowCount();
        //remove data from table
        for(int i = tableRow-1; i >=0; i--){
            model.removeRow(i);
        }
    }//GEN-LAST:event_btnGetOrderByIDclearActionPerformed

    private void txtCustomerPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerPhoneActionPerformed

    private void btnSearchByCPHclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByCPHclearActionPerformed
        // TODO add your handling code here:
        txtCustomerPhone.setText("");
        DefaultTableModel model = (DefaultTableModel)tblShowOrdersByPH.getModel();
        int tableRow = model.getRowCount();
        //remove data from table
        for(int i = tableRow-1; i >=0; i--){
            model.removeRow(i);
        }
    }//GEN-LAST:event_btnSearchByCPHclearActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try{
            DefaultTableModel mainTable = (DefaultTableModel)itemTable.getModel();
            //get how many rows
            int rowCount = mainTable.getRowCount();
            for(int i = rowCount-1; i >=0; i--){
                mainTable.removeRow(i);
            }
            
            getItems items = new getItems();
            ArrayList<String> _items = items.returnData();
            int len = _items.size()/5;
            int counter = 0;

            for (int i =0; i<len; i++){
                Object[] obj = {_items.get(counter++),_items.get(counter++),
                            _items.get(counter++),_items.get(counter++),_items.get(counter++)};
                mainTable.addRow(obj);
            }
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Please close and open");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new panel().setVisible(true);
            }
        }); 
        
    }

    @Override
    public synchronized void addWindowListener(WindowListener l) {
        super.addWindowListener(l); //To change body of generated methods, choose Tools | Templates.
       
    }
   
    @Override
    public synchronized void addWindowFocusListener(WindowFocusListener l) {
        super.addWindowFocusListener(l); //To change body of generated methods, choose Tools | Templates.
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBilling;
    private javax.swing.JButton btnCart;
    private javax.swing.JButton btnClearCart;
    private javax.swing.JButton btnClearSelected;
    private javax.swing.JButton btnGetOrderByID;
    private javax.swing.JButton btnGetOrderByIDclear;
    private javax.swing.JButton btnImageChoose;
    private javax.swing.JButton btnNewItemAdd;
    private javax.swing.JButton btnNewItemClear;
    private javax.swing.JButton btnPriceUpdate;
    private javax.swing.JButton btnSearchByCPH;
    private javax.swing.JButton btnSearchByCPHclear;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateAvailability;
    private javax.swing.JButton btnUpdateDesc;
    private javax.swing.JButton btnUpdateImage;
    private javax.swing.JButton btnUpdateImageSubmit;
    private javax.swing.JTable cartTable;
    private javax.swing.JComboBox<String> cmbAvailability;
    private javax.swing.JTable finalTable;
    private javax.swing.JTable itemTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lbl;
    private javax.swing.JLabel lblBalance;
    private javax.swing.JLabel lblCustomerAddress;
    private javax.swing.JLabel lblCustomerID;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblCustomerPhone;
    private javax.swing.JLabel lblFinalTotal;
    private javax.swing.JLabel lblImageName;
    private javax.swing.JLabel lblImg;
    private javax.swing.JLabel lblNewItemImg;
    private javax.swing.JLabel lblOrderAdvance;
    private javax.swing.JLabel lblOrderAmount;
    private javax.swing.JLabel lblOrderDate;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTabbedPane mainTabPane;
    private javax.swing.JTable tblShowOrdersByPH;
    private javax.swing.JTable tblViewOrderByOID;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAdvance;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtCustomerPhone;
    private javax.swing.JTextField txtFullPayment;
    private javax.swing.JTextField txtItemDescID;
    private javax.swing.JTextField txtItemIDPrice;
    private javax.swing.JTextField txtItemIdAvailable;
    private javax.swing.JTextField txtItemUpdatePrice;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNewItemName;
    private javax.swing.JTextField txtNewItemPrice;
    private javax.swing.JTextField txtOrderId;
    private javax.swing.JTextField txtUpdateDesc;
    private javax.swing.JTextField txtUpdateImageID;
    // End of variables declaration//GEN-END:variables
   

}

